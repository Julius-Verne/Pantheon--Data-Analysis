ylim(25, quantile(db$birth_year, probs = 0.95))
ggplot(db, aes(x = hpi, y = birth_year)) +
geom_jitter() +
ylim(25, quantile(db$birth_year, probs = 0.95))
ggplot(db, aes(x = hpi, y = birth_year)) +
geom_jitter()
ggplot(db, aes(y = hpi, x = birth_year)) +
geom_jitter()
cor.test(db$hpi, db$birth_year)
ggplot(db, aes(y = hpi, x = birth_year)) +
geom_jitter()+
coord_flip()
ggplot(db, aes(y = hpi, x = birth_year)) +
geom_jitter()+
coord_flip()+
scale_y_reverse()
ggplot(db, aes(x = hpi, y = birth_year)) +
geom_jitter()+
scale_y_reverse()
ggplot(db, aes(x = hpi, y = birth_year)) +
geom_jitter()+
cor.test(db$hpi, db$birth_year)
ggplot(db, aes(x = hpi, y = birth_year)) +
geom_jitter()
ggplot(db, aes(x = hpi, y = birth_year)) +
geom_jitter()+
scale_y_continuous(breaks = 500 )
ggplot(db, aes(x = hpi, y = birth_year)) +
geom_jitter()+
scale_y_continuous(breaks = c(-2000,2000, 250) )
ggplot(db, aes(x = hpi, y = birth_year)) +
geom_jitter()+
scale_y_continuous( breaks = seq(-3000, 2000, 500) )
ggplot(db, aes(x = hpi, y = birth_year)) +
geom_jitter(alpha = 0.5)+
scale_y_continuous( breaks = seq(-3000, 2000, 500) ) +
ggtitle("Older Notable figures tend to have higher HPI",
subtitle = "Birth Year & Historical Popularity Index") +
labs(y = "Year", x = "Historical Popularity Index")
ggplot(db, aes(x = hpi, y = birth_year)) +
geom_jitter(alpha = 0.5)+
scale_y_continuous( breaks = seq(-3000, 2000, 500) ) +
ggtitle("Older Notable figures tend to have a higher HPI",
subtitle = "Birth Year & Historical Popularity Index") +
labs(y = "Year", x = "Historical Popularity Index")
ggplot(db, aes(x = hpi, y = log10(average_views) )) +
geom_point() +
ylim(4, quantile(log10(db$average_views), probs = 0.95))
ggplot(db, aes(x = hpi, y = article_languages)) +
geom_jitter() +
ylim(25, quantile(db$article_languages, probs = 0.95))
cor.test(db$hpi, db$article_languages)
ggplot(db, aes(x = hpi, y = article_languages)) +
geom_jitter() +
ylim(25, quantile(db$article_languages, probs = 0.95))+
ggtitle("There is a vague upward relationship",
subtitle = "# of Languages & Historical Popularity Index") +
labs(y = "# of Languages", x = "Historical Popularity Index")
ggplot(db, aes(x = hpi, y = article_languages)) +
geom_jitter() +
ylim(25, quantile(db$article_languages, probs = 0.95))+
ggtitle("There is a vague positive relationship",
subtitle = "# of Languages & Historical Popularity Index") +
labs(y = "# of Languages", x = "Historical Popularity Index")
str(db)
ggplot(db, aes(x = domain, y = hpi))+
geom_boxplot()
ggplot(db, aes(x=reorder( domain , domain,
function(x)-length(x)), y = hpi))+
geom_boxplot()
ggplot(db, aes(x=reorder( continent , continent,
function(x)-length(x)),
y = hpi))+
geom_boxplot()
ggplot(subset(db, continent!=" " ), aes(x=reorder( continent , continent,
function(x)-length(x)),
y = hpi))+
geom_boxplot()
ggplot(subset(db, continent!="" ), aes(x=reorder( continent , continent,
function(x)-length(x)),
y = hpi))+
geom_boxplot()
ggplot(db, aes(x=reorder( domain , domain,
function(x)-length(x)),
y = hpi))+
geom_boxplot()
ggplot(db, aes(x=reorder( industry , industry,
function(x)-length(x)),
y = hpi))+
geom_boxplot()
ggplot(db, aes(x=reorder( industry , industry,
function(x)-length(x)),
y = hpi))+
geom_boxplot()+
geom_hline( yintercept= median(hpi), linetype="dashed", color = "red")
ggplot(db, aes(x=reorder( industry , industry,
function(x)-length(x)),
y = hpi))+
geom_boxplot()+
geom_hline( yintercept= median(db$hpi), linetype="dashed", color = "red")
ggplot(subset(db, continent!="" ), aes(x=reorder( continent , continent,
function(x)-length(x)),
y = hpi))+
geom_boxplot()
ggplot(subset(db, continent!="" ), aes(x=reorder( continent , continent,
function(x)-length(x)),
y = hpi))+
geom_boxplot()+
geom_hline( yintercept= median(db$hpi), linetype="dashed", color = "red")
ggplot(subset(db, continent!="" ), aes(x=reorder( sex , sex,
function(x)-length(x)),
y = hpi))+
geom_boxplot()+
geom_hline( yintercept= median(db$hpi), linetype="dashed", color = "red")
View(db)
ggplot(db, aes(x = hpi, y = log10(page_views) )) +
geom_point() +
ylim(4, quantile(log10(db$page_views), probs = 0.95))
ggplot(db, aes(x = hpi, y = page_views)) +
geom_point() +
ylim(0, quantile(db$page_views, probs = 0.95))
ggplot(db, aes(x = hpi, y = page_views)) +
geom_point() +
ylim(0, quantile(db$page_views, probs = 0.95)) +
ggtitle("Initial Test Between Page Views & HPI",
subtitle = "Page Views & Historical Popularity Index") +
labs(y = "# of Languages", x = "Historical Popularity Index")
ggplot(db, aes(x = hpi, y = page_views)) +
geom_point() +
ylim(0, quantile(db$page_views, probs = 0.95)) +
ggtitle("Initial Test Between Page Views & HPI",
subtitle = "Page Views & Historical Popularity Index") +
labs(y = "Page Views", x = "Historical Popularity Index")
ggplot(db, aes(x = historical_popularity_index))+
geom_histogram(binwidth = 0.5)
summary(db$historical_popularity_index)
ggplot(db, aes(x = historical_popularity_index))+
geom_histogram(binwidth = 0.5)
ggplot(db, aes(x = hpi, y = page_views)) +
geom_point() +
ylim(0, quantile(db$page_views, probs = 0.95)) +
ggtitle("Initial Test Between Page Views & HPI",
subtitle = "Page Views & Historical Popularity Index") +
labs(y = "Page Views", x = "Historical Popularity Index")
cor.test(db$hpi, db$page_views)
ggplot(db, aes(x = hpi, y = log10(page_views) )) +
geom_point() +
ylim(0, quantile(db$page_views, probs = 0.95)) +
ggtitle("Initial Test Between Page Views & HPI",
subtitle = "Page Views & Historical Popularity Index") +
labs(y = "Page Views", x = "Historical Popularity Index")
ggplot(db, aes(x = hpi, y = log10(page_views) )) +
geom_point() +
ylim(0, quantile(log10(db$page_views), probs = 0.95)) +
ggtitle("Initial Test Between Page Views & HPI",
subtitle = "Page Views & Historical Popularity Index") +
labs(y = "Page Views", x = "Historical Popularity Index")
ggplot(db, aes(x = hpi, y = log10(page_views) )) +
geom_point() +
ylim(min(log10(db$page_views)), quantile(log10(db$page_views), probs = 0.95)) +
ggtitle("Initial Test Between Page Views & HPI",
subtitle = "Page Views & Historical Popularity Index") +
labs(y = "Page Views", x = "Historical Popularity Index")
cor.test(db$hpi, log10(db$page_views) )
ggplot(db, aes(x = hpi, y = page_views)) +
geom_point(alpha = 0.1) +
ylim(0, quantile(db$page_views, probs = 0.95)) +
ggtitle("Initial Test Between Page Views & HPI",
subtitle = "Page Views & Historical Popularity Index") +
labs(y = "Page Views", x = "Historical Popularity Index")
ggplot(db, aes(x = hpi, y = log10(page_views) )) +
geom_point(alpha = 0.1) +
ylim(min(log10(db$page_views)), quantile(log10(db$page_views), probs = 0.95)) +
ggtitle("Log10 Test Between Page Views & HPI",
subtitle = "Log10(Page Views) & Historical Popularity Index") +
labs(y = "Log10(Page Views)", x = "Historical Popularity Index")
ggplot(db, aes(x = hpi, y = log10(page_views) )) +
geom_point(alpha = 0.2) +
ylim(min(log10(db$page_views)), quantile(log10(db$page_views), probs = 0.95)) +
ggtitle("Log10 Test Between Page Views & HPI",
subtitle = "Log10(Page Views) & Historical Popularity Index") +
labs(y = "Log10(Page Views)", x = "Historical Popularity Index")
ggplot(db, aes(x = hpi, y = page_views)) +
geom_point(alpha = 0.2) +
ylim(0, quantile(db$page_views, probs = 0.95)) +
ggtitle("Initial Test Between Page Views & HPI",
subtitle = "Page Views & Historical Popularity Index") +
labs(y = "Page Views", x = "Historical Popularity Index")
ggplot(db, aes(x = hpi, y = average_views)) +
geom_point() +
ylim(0, quantile(db$average_views, probs = 0.95))
ggplot(db, aes(x = hpi, y = average_views)) +
geom_point(alpha = 0.2) +
ylim(0, quantile(db$average_views, probs = 0.95))
ggplot(db, aes(x = hpi, y = average_views)) +
geom_point(alpha = 0.2) +
ylim(0, quantile(db$average_views, probs = 0.95)) +
ggtitle("Test Between Avg Page Views & HPI",
subtitle = "Mean Page Views & Historical Popularity Index") +
labs(y = "Mean Page Views", x = "Historical Popularity Index")
cor.test(db$hpi, db$average_views)
ggplot(db, aes(x = hpi, y = log10(average_views))) +
geom_point(alpha = 0.2) +
ylim(0, quantile(log10(db$average_views), probs = 0.95)) +
ggtitle("Test Between Avg Page Views & HPI",
subtitle = "Mean Page Views & Historical Popularity Index") +
labs(y = "Mean Page Views", x = "Historical Popularity Index")
ggplot(db, aes(x = hpi, y = log10(average_views))) +
geom_point(alpha = 0.2) +
ylim(min(log10(db$average_views)),
quantile(log10(db$average_views), probs = 0.95)) +
ggtitle("Test Between Avg Page Views & HPI",
subtitle = "Mean Page Views & Historical Popularity Index") +
labs(y = "Mean Page Views", x = "Historical Popularity Index")
ggplot(db, aes(x = hpi, y = log10(average_views))) +
geom_point(alpha = 0.2) +
ylim(min(log10(db$average_views)),
quantile(log10(db$average_views), probs = 0.95)) +
ggtitle("Log10 Test Between Avg Page Views & HPI",
subtitle = "Log10 Mean Page Views & Historical Popularity Index") +
labs(y = "Log10 Mean Page Views", x = "Historical Popularity Index")
cor.test(db$hpi, log10(db$average_views) )
cor.test(db$hpi, db$birth_year)
ggplot(db, aes(x = hpi, y = birth_year)) +
geom_jitter(alpha = 0.5)+
scale_y_continuous( breaks = seq(-3000, 2000, 500) ) +
ggtitle("Older Notable figures tend to have a higher HPI",
subtitle = "Birth Year & Historical Popularity Index") +
labs(y = "Year", x = "Historical Popularity Index")
db$antiquity <- 2013 - db$birth_year
ggplot(db, aes(x = hpi, y = antiquity)) +
geom_jitter(alpha = 0.5)+
scale_y_continuous( breaks = seq(-3000, 2000, 500) ) +
ggtitle("Older Notable figures tend to have a higher HPI",
subtitle = "Birth Year & Historical Popularity Index") +
labs(y = "Year", x = "Historical Popularity Index")
ggplot(db, aes(x = hpi, y = antiquity)) +
geom_jitter(alpha = 0.5)+
scale_y_continuous( breaks = seq(0, 5000, 500) ) +
ggtitle("Older Notable figures tend to have a higher HPI",
subtitle = "Birth Year & Historical Popularity Index") +
labs(y = "Year", x = "Historical Popularity Index")
ggplot(db, aes(x = hpi, y = antiquity)) +
geom_jitter(alpha = 0.5)+
scale_y_continuous( breaks = seq(0, 6000, 500) ) +
ggtitle("Older Notable figures tend to have a higher HPI",
subtitle = "Birth Year & Historical Popularity Index") +
labs(y = "Year", x = "Historical Popularity Index")
ggplot(db, aes(x = hpi, y = antiquity)) +
geom_jitter(alpha = 0.5)+
scale_y_continuous( breaks = seq(0, 5000, 500) ) +
ggtitle("Older Notable figures tend to have a higher HPI",
subtitle = "Birth Year & Historical Popularity Index") +
labs(y = "Year", x = "Historical Popularity Index")
ggplot(db, aes(x = hpi, y = antiquity)) +
geom_jitter(alpha = 0.5)+
scale_y_continuous( breaks = seq(0, 5500, 500) ) +
ggtitle("Older Notable figures tend to have a higher HPI",
subtitle = "Birth Year & Historical Popularity Index") +
labs(y = "Year", x = "Historical Popularity Index")
p1 <- ggplot(db, aes(x=antiquity))+
geom_histogram(binwidth = 50)+
scale_x_continuous(breaks = seq(0,5000,500))+
ggtitle("Year of Birth", subtitle = "Complete dataset")+
labs(colour = "Cylinders", x = "Years", y = "# of People")+
theme_minimal()+
theme_update(plot.title = element_text(size = rel(2)))
p2 <- ggplot(db, aes(x=birth_year))+
geom_histogram(binwidth = 10)+
ggtitle("Year of Birth", subtitle = "5% Quantile and Up")+
labs( x = "Years", y = "# of People")+
xlim( quantile(db$birth_year, probs = 0.05), 2050)
p1 <- ggplot(db, aes(x=antiquity))+
geom_histogram(binwidth = 50)+
scale_x_continuous(breaks = seq(0,5000,500))+
ggtitle("Year of Birth", subtitle = "Complete dataset")+
labs(colour = "Cylinders", x = "Years", y = "# of People")+
theme_minimal()+
theme_update(plot.title = element_text(size = rel(2)))
p2 <- ggplot(db, aes(x=birth_year))+
geom_histogram(binwidth = 10)+
ggtitle("Year of Birth", subtitle = "5% Quantile and Up")+
labs( x = "Years", y = "# of People")+
xlim( quantile(db$birth_year, probs = 0.05), 2050)
p1 <- ggplot(db, aes(x=antiquity))+
geom_histogram(binwidth = 50)+
scale_x_continuous(breaks = seq(0,5000,500))+
ggtitle("Year of Birth", subtitle = "Complete dataset")+
labs(colour = "Cylinders", x = "Years", y = "# of People")+
theme_minimal()+
theme_update(plot.title = element_text(size = rel(2)))
p2 <- ggplot(db, aes(x=birth_year))+
geom_histogram(binwidth = 10)+
ggtitle("Year of Birth", subtitle = "5% Quantile and Up")+
labs( x = "Years", y = "# of People")
grid.arrange(p1,p2)
p1 <- ggplot(db, aes(x=antiquity))+
geom_histogram(binwidth = 50)+
scale_x_continuous(breaks = seq(0,5000,500))+
ggtitle("Year of Birth", subtitle = "Complete dataset")+
labs(colour = "Cylinders", x = "Years", y = "# of People")+
theme_minimal()+
theme_update(plot.title = element_text(size = rel(2)))
p2 <- ggplot(db, aes(x=antiquity))+
geom_histogram(binwidth = 10)+
ggtitle("Year of Birth", subtitle = "5% Quantile and Up")+
labs( x = "Years", y = "# of People")+
xlim( quantile(db$antiquity, probs = 0.05), 2050)
p1 <- ggplot(db, aes(x=birth_year))+
geom_histogram(binwidth = 50)+
scale_x_continuous(breaks = seq(-5000,2000,500))+
ggtitle("Year of Birth", subtitle = "Complete dataset")+
labs(colour = "Cylinders", x = "Years", y = "# of People")+
theme_minimal()+
theme_update(plot.title = element_text(size = rel(2)))
p2 <- ggplot(db, aes(x=birth_year))+
geom_histogram(binwidth = 10)+
ggtitle("Year of Birth", subtitle = "5% Quantile and Up")+
labs( x = "Years", y = "# of People")+
xlim( quantile(db$birth_year, probs = 0.05), 2050)
p1 <- ggplot(db, aes(x=birth_year))+
geom_histogram(binwidth = 50)+
scale_x_continuous(breaks = seq(-5000,2000,500))+
ggtitle("Year of Birth", subtitle = "Complete dataset")+
labs(colour = "Cylinders", x = "Years", y = "# of People")+
theme_minimal()+
theme_update(plot.title = element_text(size = rel(2)))
p2 <- ggplot(db, aes(x=birth_year))+
geom_histogram(binwidth = 10)+
ggtitle("Year of Birth", subtitle = "5% Quantile and Up")+
labs( x = "Years", y = "# of People") +
xlim(
quantile(db$birth_year, probs = 0.05),
2010)
p1 <- ggplot(db, aes(x=birth_year))+
geom_histogram(binwidth = 50)+
scale_x_continuous(breaks = seq(-5000,2000,500))+
ggtitle("Year of Birth", subtitle = "Complete dataset")+
labs(colour = "Cylinders", x = "Years", y = "# of People")+
theme_minimal()+
theme_update(plot.title = element_text(size = rel(2)))
p2 <- ggplot(db, aes(x=birth_year))+
geom_histogram(binwidth = 10)+
ggtitle("Year of Birth", subtitle = "5% Quantile and Up")+
labs( x = "Years", y = "# of People") +
xlim(
quantile(db$birth_year, probs = 0.05),
2010)
p1 <- ggplot(db, aes(x=birth_year))+
geom_histogram(binwidth = 50)+
scale_x_continuous(breaks = seq(-5000,2000,500))+
ggtitle("Year of Birth", subtitle = "Complete dataset")+
labs(colour = "Cylinders", x = "Years", y = "# of People")+
theme_minimal()+
theme_update(plot.title = element_text(size = rel(2)))
p2 <- ggplot(db, aes(x=birth_year))+
geom_histogram(binwidth = 10)+
ggtitle("Year of Birth", subtitle = "5% Quantile and Up")+
labs( x = "Years", y = "# of People") +
xlim(
quantile(db$birth_year, probs = 0.1),
2010)
p1 <- ggplot(db, aes(x=birth_year))+
geom_histogram(binwidth = 50)+
scale_x_continuous(breaks = seq(-5000,2000,500))+
ggtitle("Year of Birth", subtitle = "Complete dataset")+
labs(colour = "Cylinders", x = "Years", y = "# of People")+
theme_minimal()+
theme_update(plot.title = element_text(size = rel(2)))
p2 <- ggplot(db, aes(x=birth_year))+
geom_histogram(binwidth = 10)+
ggtitle("Year of Birth", subtitle = "5% Quantile and Up")+
labs( x = "Years", y = "# of People") +
xlim(
quantile(db$birth_year, probs = 0.1),
2010)
p1 <- ggplot(db, aes(x=birth_year))+
geom_histogram(binwidth = 50)+
scale_x_continuous(breaks = seq(-5000,2000,500))+
ggtitle("Year of Birth", subtitle = "Complete dataset")+
labs(colour = "Cylinders", x = "Years", y = "# of People")+
theme_minimal()+
theme_update(plot.title = element_text(size = rel(2)))
p2 <- ggplot(db, aes(x=birth_year))+
geom_histogram(binwidth = 10)+
ggtitle("Year of Birth", subtitle = "5% Quantile and Up")+
labs( x = "Years", y = "# of People") +
xlim(
quantile(db$birth_year, probs = 0.1),
2010)
p1 <- ggplot(db, aes(x=birth_year))+
geom_histogram(binwidth = 50)+
scale_x_continuous(breaks = seq(-5000,2000,500))+
ggtitle("Year of Birth", subtitle = "Complete dataset")+
labs(colour = "Cylinders", x = "Years", y = "# of People")+
theme_minimal()+
theme_update(plot.title = element_text(size = rel(2)))
p2 <- ggplot(db, aes(x=birth_year))+
geom_histogram(binwidth = 10)+
ggtitle("Year of Birth", subtitle = "5% Quantile and Up")+
labs( x = "Years", y = "# of People") +
xlim(
0),
p1 <- ggplot(db, aes(x=birth_year))+
geom_histogram(binwidth = 50)+
scale_x_continuous(breaks = seq(-5000,2000,500))+
ggtitle("Year of Birth", subtitle = "Complete dataset")+
labs(colour = "Cylinders", x = "Years", y = "# of People")+
theme_minimal()+
theme_update(plot.title = element_text(size = rel(2)))
p2 <- ggplot(db, aes(x=birth_year))+
geom_histogram(binwidth = 10)+
ggtitle("Year of Birth", subtitle = "5% Quantile and Up")+
labs( x = "Years", y = "# of People") +
xlim(
0,
2010)
grid.arrange(p1,p2)
ggplot(db, aes(x = hpi, y = antiquity)) +
geom_jitter(alpha = 0.5)+
scale_y_continuous( breaks = seq(0, 5500, 500) ) +
ggtitle("Older Notable figures tend to have a higher HPI",
subtitle = "Birth Year & Historical Popularity Index") +
labs(y = "Antiquity", x = "Historical Popularity Index")
ggplot(db, aes(x = hpi, y = antiquity)) +
geom_jitter(alpha = 0.5)+
scale_y_continuous( breaks = seq(0, 5500, 500) ) +
ggtitle("Older Notable figures tend to have a higher HPI",
subtitle = "Antiquity in years & Historical Popularity Index") +
labs(y = "Antiquity", x = "Historical Popularity Index")
cor.test(db$hpi, log10(db$antiquity))
ggplot(db, aes(x = hpi, y = article_languages)) +
geom_jitter() +
ylim(25, quantile(db$article_languages, probs = 0.95))+
ggtitle("There is a vague positive relationship",
subtitle = "# of Languages & Historical Popularity Index") +
labs(y = "# of Languages", x = "Historical Popularity Index")
ggplot(db, aes(x = hpi, y = article_languages)) +
geom_jitter( alpha = 0.2) +
ylim(25, quantile(db$article_languages, probs = 0.95))+
ggtitle("There is a vague positive relationship",
subtitle = "# of Languages & Historical Popularity Index") +
labs(y = "# of Languages", x = "Historical Popularity Index")
cor.test(db$hpi, db$article_languages)
cor.test(db$hpi, db$article_languages)
ggplot(db, aes(x=reorder( occupation , occupation,
function(x)-length(x)),
y = hpi))+
geom_boxplot()+
geom_hline( yintercept= median(db$hpi), linetype="dashed", color = "red") +
coord_flip()
ggplot(db, aes(x = hpi, y = page_views)) +
geom_point(alpha = 0.2) +
ylim(0, quantile(db$page_views, probs = 0.95)) +
ggtitle("Initial Test Between Page Views & HPI",
subtitle = "Page Views & Historical Popularity Index") +
labs(y = "Page Views", x = "Historical Popularity Index")
ggplot(db, aes(x=reorder( industry , industry,
function(x)-length(x)),
y = hpi))+
geom_boxplot()+
geom_hline( yintercept= median(db$hpi), linetype="dashed", color = "red") +
coord_flip()+
ggtitle("Which occupations have a higher HPI?",
subtitle = "Occupation & Historical Popularity Index") +
labs(y = "Occupations", x = "Historical Popularity Index")
ggplot(db, aes(x=reorder( industry , industry,
function(x)-length(x)),
y = hpi))+
geom_boxplot()+
geom_hline( yintercept= median(db$hpi), linetype="dashed", color = "red") +
coord_flip()+
ggtitle("Which occupations have a higher HPI?",
subtitle = "Occupation & Historical Popularity Index") +
labs(y = "Occupations", x = "Historical Popularity Index")
ggplot(db, aes(x=reorder( industry , industry,
function(x)-length(x)),
y = hpi))+
geom_boxplot()+
geom_hline( yintercept= median(db$hpi), linetype="dashed", color = "red") +
coord_flip()+
ggtitle("Which Industry have a higher HPI?",
subtitle = "Industry & Historical Popularity Index") +
labs(y = "Industry", x = "Historical Popularity Index")
ggplot(db, aes(x=reorder( domain , domain,
function(x)-length(x)),
y = hpi))+
geom_boxplot()+
geom_hline( yintercept= median(db$hpi), linetype="dashed", color = "red") +
coord_flip()+
ggtitle("Which Domain has a higher HPI?",
subtitle = "Domain & Historical Popularity Index") +
labs(y = "Domain", x = "Historical Popularity Index")
ggplot(db, aes(x=reorder( continent , continent,
function(x)-length(x)),
y = hpi))+
geom_boxplot()+
geom_hline( yintercept= median(db$hpi), linetype="dashed", color = "red") +
coord_flip()+
ggtitle("Which Continet has a higher HPI?",
subtitle = "Country & Historical Popularity Index") +
labs(y = "Country", x = "Historical Popularity Index")
ggplot(subset(db, continent!=""), aes(x=reorder( continent , continent,
function(x)-length(x)),
y = hpi))+
geom_boxplot()+
geom_hline( yintercept= median(db$hpi), linetype="dashed", color = "red") +
coord_flip()+
ggtitle("Which Continet has a higher HPI?",
subtitle = "Country & Historical Popularity Index") +
labs(y = "Country", x = "Historical Popularity Index")
by(db$hpi, db$sex, summary)
